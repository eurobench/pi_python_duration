name: Python code check

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.8
      uses: actions/setup-python@v1
      with:
        python-version: 3.8
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r src/pi_sample_duration/requirements.txt
    - name: Lint with flake8
      run: |
        pip install flake8
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test package
      run: |
        pip install pytest
        pytest src/pi_sample_duration
    - name: Test run_pi
      run: |
        pip install src/pi_sample_duration
        python tests/test_direct_call.py

  yaml-linting:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.8
        uses: actions/setup-python@v1
        with:
          python-version: 3.8
      - name: install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install yamllint
      - name: yaml linting
        # see https://yamllint.readthedocs.io/en/stable/configuration.html
        run: |
          success=0
          for i in `find tests -name "*.yaml" -type f`; do
            echo "Processing $i"
            yamllint -d relaxed $i
            res=$?
            success=$((res+success))
          done
          exit $success

  csv-linting:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      # see https://github.com/Clever/csvlint
      - name: install dependencies
        run: |
          wget -O csvlint-v0.2.0-linux-amd64.tar.gz https://github.com/Clever/csvlint/releases/download/0.2.0/csvlint-v0.2.0-linux-amd64.tar.gz
          tar -xzf csvlint-v0.2.0-linux-amd64.tar.gz
          cp csvlint-v0.2.0-linux-amd64/csvlint .
      - name: csv linting
        run: |
          res=0
          for i in `find . -name "*.csv" -type f`; do
              echo "Processing $i"
              ./csvlint "$i"
              oneres=$?
              echo "Resultat: $oneres"
              res=$((res+oneres))
          done
          exit $res
